{"ast":null,"code":"import _slicedToArray from\"/home/devrobot/Escritorio/sts-4.5.0.RELEASE/workspace-spring-tool-suite/spring-boot-ecommerce/ecommerce-frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useContext,useState,useEffect}from\"react\";import{Grid,Card,Segment}from\"semantic-ui-react\";import Product from\"../components/Product\";import Pagination from\"../components/Pagination\";import AddProductForm from\"../components/AddProductForm\";import Context from\"../config/context\";export default function Products(){var context=useContext(Context);var user=context.user,products=context.products,getProducts=context.getProducts;var _useState=useState(1),_useState2=_slicedToArray(_useState,2),currentPage=_useState2[0],setCurrentPage=_useState2[1];var _useState3=useState(6),_useState4=_slicedToArray(_useState3,2),cardsPerPage=_useState4[0],setCardsPerPage=_useState4[1];useEffect(function(){getProducts();},[]);// Get current products\nvar indexOfLastProduct=currentPage*cardsPerPage;var indexOfFirstProduct=indexOfLastProduct-cardsPerPage;var currentProducts=products.slice(indexOfFirstProduct,indexOfLastProduct);var views=products.length>0?currentProducts.map(function(product){return React.createElement(Product,{product:product});}):React.createElement(Card,null,React.createElement(Card.Content,null,React.createElement(\"h2\",null,\"Nothing here!\")));var paginate=function paginate(pageNumber){return setCurrentPage(pageNumber);};var pagination=products.length>cardsPerPage?React.createElement(Pagination,{cardsPerPage:cardsPerPage,totalCards:products.length,paginate:paginate}):null;var add=user?user.admin?React.createElement(AddProductForm,null):null:null;return React.createElement(\"div\",null,React.createElement(Segment,null,React.createElement(Grid,null,React.createElement(Grid.Column,{floated:\"left\",width:5},React.createElement(\"h1\",null,\"Recent Products\")),React.createElement(Grid.Column,{floated:\"right\",width:5},add))),React.createElement(Card.Group,{fluid:true,itemsPerRow:\"3\"},views),React.createElement(\"br\",null),React.createElement(\"center\",null,pagination));}","map":{"version":3,"sources":["/home/devrobot/Escritorio/sts-4.5.0.RELEASE/workspace-spring-tool-suite/spring-boot-ecommerce/ecommerce-frontend/src/pages/Products.js"],"names":["React","useContext","useState","useEffect","Grid","Card","Segment","Product","Pagination","AddProductForm","Context","Products","context","user","products","getProducts","currentPage","setCurrentPage","cardsPerPage","setCardsPerPage","indexOfLastProduct","indexOfFirstProduct","currentProducts","slice","views","length","map","product","paginate","pageNumber","pagination","add","admin"],"mappings":"mMAAA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,CAA4BC,QAA5B,CAAsCC,SAAtC,KAAuD,OAAvD,CAEA,OAASC,IAAT,CAAeC,IAAf,CAAqBC,OAArB,KAAoC,mBAApC,CAEA,MAAOC,CAAAA,OAAP,KAAoB,uBAApB,CACA,MAAOC,CAAAA,UAAP,KAAuB,0BAAvB,CACA,MAAOC,CAAAA,cAAP,KAA2B,8BAA3B,CAEA,MAAOC,CAAAA,OAAP,KAAoB,mBAApB,CAEA,cAAe,SAASC,CAAAA,QAAT,EAAoB,CACjC,GAAMC,CAAAA,OAAO,CAAGX,UAAU,CAACS,OAAD,CAA1B,CADiC,GAEzBG,CAAAA,IAFyB,CAEOD,OAFP,CAEzBC,IAFyB,CAEnBC,QAFmB,CAEOF,OAFP,CAEnBE,QAFmB,CAETC,WAFS,CAEOH,OAFP,CAETG,WAFS,eAIKb,QAAQ,CAAC,CAAD,CAJb,wCAI1Bc,WAJ0B,eAIbC,cAJa,8BAKOf,QAAQ,CAAC,CAAD,CALf,yCAK1BgB,YAL0B,eAKZC,eALY,eAOjChB,SAAS,CAAC,UAAM,CACdY,WAAW,GACZ,CAFQ,CAEN,EAFM,CAAT,CAIA;AACA,GAAMK,CAAAA,kBAAkB,CAAGJ,WAAW,CAAGE,YAAzC,CACA,GAAMG,CAAAA,mBAAmB,CAAGD,kBAAkB,CAAGF,YAAjD,CACA,GAAMI,CAAAA,eAAe,CAAGR,QAAQ,CAACS,KAAT,CACtBF,mBADsB,CAEtBD,kBAFsB,CAAxB,CAKA,GAAMI,CAAAA,KAAK,CACTV,QAAQ,CAACW,MAAT,CAAkB,CAAlB,CACEH,eAAe,CAACI,GAAhB,CAAoB,SAAAC,OAAO,QAAI,qBAAC,OAAD,EAAS,OAAO,CAAEA,OAAlB,EAAJ,EAA3B,CADF,CAGE,oBAAC,IAAD,MACE,oBAAC,IAAD,CAAM,OAAN,MACE,8CADF,CADF,CAJJ,CAWA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAAAC,UAAU,QAAIZ,CAAAA,cAAc,CAACY,UAAD,CAAlB,EAA3B,CAEA,GAAMC,CAAAA,UAAU,CACdhB,QAAQ,CAACW,MAAT,CAAkBP,YAAlB,CACE,oBAAC,UAAD,EACE,YAAY,CAAEA,YADhB,CAEE,UAAU,CAAEJ,QAAQ,CAACW,MAFvB,CAGE,QAAQ,CAAEG,QAHZ,EADF,CAMI,IAPN,CASA,GAAMG,CAAAA,GAAG,CAAGlB,IAAI,CAAGA,IAAI,CAACmB,KAAL,CAAa,oBAAC,cAAD,MAAb,CAAkC,IAArC,CAA4C,IAA5D,CAEA,MACE,gCACE,oBAAC,OAAD,MACE,oBAAC,IAAD,MACE,oBAAC,IAAD,CAAM,MAAN,EAAa,OAAO,CAAC,MAArB,CAA4B,KAAK,CAAE,CAAnC,EACE,gDADF,CADF,CAIE,oBAAC,IAAD,CAAM,MAAN,EAAa,OAAO,CAAC,OAArB,CAA6B,KAAK,CAAE,CAApC,EACGD,GADH,CAJF,CADF,CADF,CAWE,oBAAC,IAAD,CAAM,KAAN,EAAY,KAAK,KAAjB,CAAkB,WAAW,CAAC,GAA9B,EACGP,KADH,CAXF,CAcE,8BAdF,CAeE,kCAASM,UAAT,CAfF,CADF,CAmBD","sourcesContent":["import React, { useContext, useState, useEffect } from \"react\";\n\nimport { Grid, Card, Segment } from \"semantic-ui-react\";\n\nimport Product from \"../components/Product\";\nimport Pagination from \"../components/Pagination\";\nimport AddProductForm from \"../components/AddProductForm\";\n\nimport Context from \"../config/context\";\n\nexport default function Products() {\n  const context = useContext(Context);\n  const { user, products, getProducts } = context;\n\n  const [currentPage, setCurrentPage] = useState(1);\n  const [cardsPerPage, setCardsPerPage] = useState(6);\n\n  useEffect(() => {\n    getProducts();\n  }, []);\n\n  // Get current products\n  const indexOfLastProduct = currentPage * cardsPerPage;\n  const indexOfFirstProduct = indexOfLastProduct - cardsPerPage;\n  const currentProducts = products.slice(\n    indexOfFirstProduct,\n    indexOfLastProduct\n  );\n\n  const views =\n    products.length > 0 ? (\n      currentProducts.map(product => <Product product={product} />)\n    ) : (\n      <Card>\n        <Card.Content>\n          <h2>Nothing here!</h2>\n        </Card.Content>\n      </Card>\n    );\n\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n\n  const pagination =\n    products.length > cardsPerPage ? (\n      <Pagination\n        cardsPerPage={cardsPerPage}\n        totalCards={products.length}\n        paginate={paginate}\n      />\n    ) : null;\n\n  const add = user ? user.admin ? <AddProductForm /> : null : null;\n\n  return (\n    <div>\n      <Segment>\n        <Grid>\n          <Grid.Column floated=\"left\" width={5}>\n            <h1>Recent Products</h1>\n          </Grid.Column>\n          <Grid.Column floated=\"right\" width={5}>\n            {add}\n          </Grid.Column>\n        </Grid>\n      </Segment>\n      <Card.Group fluid itemsPerRow=\"3\">\n        {views}\n      </Card.Group>\n      <br />\n      <center>{pagination}</center>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}