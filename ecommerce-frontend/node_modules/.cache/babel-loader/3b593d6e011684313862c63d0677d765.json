{"ast":null,"code":"import _slicedToArray from \"/home/devrobot/Escritorio/sts-4.5.0.RELEASE/workspace-spring-tool-suite/spring-boot-ecommerce/ecommerce-frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/devrobot/Escritorio/sts-4.5.0.RELEASE/workspace-spring-tool-suite/spring-boot-ecommerce/ecommerce-frontend/src/pages/Products.js\";\nimport React, { useContext, useState, useEffect } from \"react\";\nimport { Grid, Button, Card, Segment } from \"semantic-ui-react\";\nimport Product from \"../components/Product\";\nimport Pagination from \"../components/Pagination\";\nimport AddProductForm from \"../components/AddProductForm\";\nimport Context from \"../config/context\";\nexport default function Products() {\n  const context = useContext(Context);\n  const products = context.products,\n        getProducts = context.getProducts;\n\n  const _useState = useState(1),\n        _useState2 = _slicedToArray(_useState, 2),\n        currentPage = _useState2[0],\n        setCurrentPage = _useState2[1];\n\n  const _useState3 = useState(6),\n        _useState4 = _slicedToArray(_useState3, 2),\n        cardsPerPage = _useState4[0],\n        setCardsPerPage = _useState4[1];\n\n  useEffect(() => {\n    getProducts();\n  }, []); // Get current products\n\n  const indexOfLastProduct = currentPage * cardsPerPage;\n  const indexOfFirstProduct = indexOfLastProduct - cardsPerPage;\n  const currentProducts = products.slice(indexOfFirstProduct, indexOfLastProduct);\n  const views = products ? currentProducts.map(product => React.createElement(Product, {\n    product: product,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  })) : React.createElement(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"Nothing here!\");\n\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n\n  const pagination = products.length > cardsPerPage ? React.createElement(Pagination, {\n    cardsPerPage: cardsPerPage,\n    totalCards: products.length,\n    paginate: paginate,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }) : null;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(Segment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(Grid.Column, {\n    floated: \"left\",\n    width: 5,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(Header, {\n    as: \"h1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"Recent Products\")), React.createElement(Grid.Column, {\n    floated: \"right\",\n    width: 5,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(AddProductForm, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  })))), React.createElement(Card.Group, {\n    fluid: true,\n    itemsPerRow: \"3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, views), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }), React.createElement(\"center\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, pagination));\n}","map":{"version":3,"sources":["/home/devrobot/Escritorio/sts-4.5.0.RELEASE/workspace-spring-tool-suite/spring-boot-ecommerce/ecommerce-frontend/src/pages/Products.js"],"names":["React","useContext","useState","useEffect","Grid","Button","Card","Segment","Product","Pagination","AddProductForm","Context","Products","context","products","getProducts","currentPage","setCurrentPage","cardsPerPage","setCardsPerPage","indexOfLastProduct","indexOfFirstProduct","currentProducts","slice","views","map","product","paginate","pageNumber","pagination","length"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,EAAsCC,SAAtC,QAAuD,OAAvD;AAEA,SACEC,IADF,EAEEC,MAFF,EAGEC,IAHF,EAIEC,OAJF,QAKO,mBALP;AAOA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AAEA,OAAOC,OAAP,MAAoB,mBAApB;AAEA,eAAe,SAASC,QAAT,GAAoB;AACjC,QAAMC,OAAO,GAAGZ,UAAU,CAACU,OAAD,CAA1B;AADiC,QAEzBG,QAFyB,GAECD,OAFD,CAEzBC,QAFyB;AAAA,QAEfC,WAFe,GAECF,OAFD,CAEfE,WAFe;;AAAA,oBAIKb,QAAQ,CAAC,CAAD,CAJb;AAAA;AAAA,QAI1Bc,WAJ0B;AAAA,QAIbC,cAJa;;AAAA,qBAKOf,QAAQ,CAAC,CAAD,CALf;AAAA;AAAA,QAK1BgB,YAL0B;AAAA,QAKZC,eALY;;AAOjChB,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,WAAW;AACZ,GAFQ,EAEN,EAFM,CAAT,CAPiC,CAWjC;;AACA,QAAMK,kBAAkB,GAAGJ,WAAW,GAAGE,YAAzC;AACA,QAAMG,mBAAmB,GAAGD,kBAAkB,GAAGF,YAAjD;AACA,QAAMI,eAAe,GAAGR,QAAQ,CAACS,KAAT,CACtBF,mBADsB,EAEtBD,kBAFsB,CAAxB;AAKA,QAAMI,KAAK,GAAGV,QAAQ,GACpBQ,eAAe,CAACG,GAAhB,CAAoBC,OAAO,IAAI,oBAAC,OAAD;AAAS,IAAA,OAAO,EAAEA,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA/B,CADoB,GAGpB,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAHF;;AAMA,QAAMC,QAAQ,GAAGC,UAAU,IAAIX,cAAc,CAACW,UAAD,CAA7C;;AAEA,QAAMC,UAAU,GACdf,QAAQ,CAACgB,MAAT,GAAkBZ,YAAlB,GACE,oBAAC,UAAD;AACE,IAAA,YAAY,EAAEA,YADhB;AAEE,IAAA,UAAU,EAAEJ,QAAQ,CAACgB,MAFvB;AAGE,IAAA,QAAQ,EAAEH,QAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,GAMI,IAPN;AASA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,MAAN;AAAa,IAAA,OAAO,EAAC,MAArB;AAA4B,IAAA,KAAK,EAAE,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,EAAE,EAAC,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,CADF,EAIE,oBAAC,IAAD,CAAM,MAAN;AAAa,IAAA,OAAO,EAAC,OAArB;AAA6B,IAAA,KAAK,EAAE,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAJF,CADF,CADF,EAWI,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,KAAK,MAAjB;AAAkB,IAAA,WAAW,EAAC,GAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,KADH,CAXJ,EAcE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdF,EAeE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAASK,UAAT,CAfF,CADF;AAmBD","sourcesContent":["import React, { useContext, useState, useEffect } from \"react\";\n\nimport {\n  Grid,\n  Button,\n  Card,\n  Segment\n} from \"semantic-ui-react\";\n\nimport Product from \"../components/Product\";\nimport Pagination from \"../components/Pagination\";\nimport AddProductForm from \"../components/AddProductForm\";\n\nimport Context from \"../config/context\";\n\nexport default function Products() {\n  const context = useContext(Context);\n  const { products, getProducts } = context;\n\n  const [currentPage, setCurrentPage] = useState(1);\n  const [cardsPerPage, setCardsPerPage] = useState(6);\n\n  useEffect(() => {\n    getProducts();\n  }, []);\n\n  // Get current products\n  const indexOfLastProduct = currentPage * cardsPerPage;\n  const indexOfFirstProduct = indexOfLastProduct - cardsPerPage;\n  const currentProducts = products.slice(\n    indexOfFirstProduct,\n    indexOfLastProduct\n  );\n\n  const views = products ? (\n    currentProducts.map(product => <Product product={product} />)\n  ) : (\n    <Header>Nothing here!</Header>\n  );\n\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n\n  const pagination =\n    products.length > cardsPerPage ? (\n      <Pagination\n        cardsPerPage={cardsPerPage}\n        totalCards={products.length}\n        paginate={paginate}\n      />\n    ) : null;\n\n  return (\n    <div>\n      <Segment>\n        <Grid>\n          <Grid.Column floated=\"left\" width={5}>\n            <Header as=\"h1\">Recent Products</Header>\n          </Grid.Column>\n          <Grid.Column floated=\"right\" width={5}>\n            <AddProductForm />\n          </Grid.Column>\n        </Grid>\n      </Segment>\n        <Card.Group fluid itemsPerRow=\"3\">\n          {views}\n        </Card.Group>\n      <br />\n      <center>{pagination}</center>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}