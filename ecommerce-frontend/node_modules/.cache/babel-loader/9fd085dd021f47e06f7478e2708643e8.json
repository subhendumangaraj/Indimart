{"ast":null,"code":"import _slicedToArray from \"/home/devrobot/Escritorio/sts-4.5.0.RELEASE/workspace-spring-tool-suite/spring-boot-ecommerce/ecommerce-frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/devrobot/Escritorio/sts-4.5.0.RELEASE/workspace-spring-tool-suite/spring-boot-ecommerce/ecommerce-frontend/src/config/connector.js\";\nimport React, { useReducer } from \"react\";\nimport axiosClient from \"./axios\"; // context\n\nimport userContext from \"./context\"; // reducer\n\nimport Reducer from \"./reducer\"; // type tags\n\nimport { POST_USER, GET_USER, POST_CATEGORY, GET_CATEGORIES, GET_PRODUCTS } from \"./values\";\n\nconst Context = props => {\n  const initialState = {\n    user: null,\n    products: [],\n    categories: []\n  }; // Dispatch to execute actions\n\n  const _useReducer = useReducer(Reducer, initialState),\n        _useReducer2 = _slicedToArray(_useReducer, 2),\n        state = _useReducer2[0],\n        dispatch = _useReducer2[1]; // functions\n\n\n  const addUser = async user => {\n    const res = await axiosClient.post(\"/users/add\", user);\n    dispatch({\n      type: POST_USER,\n      payload: res.data\n    });\n  };\n\n  const getUser = async user => {\n    const res = await axiosClient.post(\"/users/get\", user);\n    dispatch({\n      type: GET_USER,\n      payload: res.data\n    });\n  };\n\n  const addCategory = async category => {\n    console.log(ca);\n    const res = await axiosClient.post(\"/categories/add\", JSON.stringify(category));\n    dispatch({\n      type: POST_CATEGORY,\n      payload: res.data\n    });\n  };\n\n  const getCategories = async () => {\n    const res = await axiosClient.get(\"/categories/all\");\n    dispatch({\n      type: GET_CATEGORIES,\n      payload: res.data\n    });\n  };\n\n  const getProducts = async () => {\n    const res = await axiosClient.get(\"/products/all\");\n    dispatch({\n      type: GET_PRODUCTS,\n      payload: res.data\n    });\n  };\n\n  return React.createElement(userContext.Provider, {\n    value: {\n      user: state.user,\n      categories: state.categories,\n      products: state.products,\n      addUser,\n      addCategory,\n      getProducts,\n      getCategories\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, props.children);\n};\n\nexport default Context;","map":{"version":3,"sources":["/home/devrobot/Escritorio/sts-4.5.0.RELEASE/workspace-spring-tool-suite/spring-boot-ecommerce/ecommerce-frontend/src/config/connector.js"],"names":["React","useReducer","axiosClient","userContext","Reducer","POST_USER","GET_USER","POST_CATEGORY","GET_CATEGORIES","GET_PRODUCTS","Context","props","initialState","user","products","categories","state","dispatch","addUser","res","post","type","payload","data","getUser","addCategory","category","console","log","ca","JSON","stringify","getCategories","get","getProducts","children"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,WAAP,MAAwB,SAAxB,C,CAEA;;AACA,OAAOC,WAAP,MAAwB,WAAxB,C,CAEA;;AACA,OAAOC,OAAP,MAAoB,WAApB,C,CAEA;;AACA,SACEC,SADF,EAEEC,QAFF,EAGEC,aAHF,EAIEC,cAJF,EAKEC,YALF,QAMO,UANP;;AAQA,MAAMC,OAAO,GAAGC,KAAK,IAAI;AACvB,QAAMC,YAAY,GAAG;AACnBC,IAAAA,IAAI,EAAE,IADa;AAEnBC,IAAAA,QAAQ,EAAE,EAFS;AAGnBC,IAAAA,UAAU,EAAE;AAHO,GAArB,CADuB,CAOvB;;AAPuB,sBAQGd,UAAU,CAACG,OAAD,EAAUQ,YAAV,CARb;AAAA;AAAA,QAQhBI,KARgB;AAAA,QAQTC,QARS,oBAUvB;;;AACA,QAAMC,OAAO,GAAG,MAAML,IAAN,IAAc;AAC5B,UAAMM,GAAG,GAAG,MAAMjB,WAAW,CAACkB,IAAZ,CAAiB,YAAjB,EAA+BP,IAA/B,CAAlB;AAEAI,IAAAA,QAAQ,CAAC;AACPI,MAAAA,IAAI,EAAEhB,SADC;AAEPiB,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAFN,KAAD,CAAR;AAID,GAPD;;AAQA,QAAMC,OAAO,GAAG,MAAMX,IAAN,IAAc;AAC5B,UAAMM,GAAG,GAAG,MAAMjB,WAAW,CAACkB,IAAZ,CAAiB,YAAjB,EAA+BP,IAA/B,CAAlB;AAEAI,IAAAA,QAAQ,CAAC;AACPI,MAAAA,IAAI,EAAEf,QADC;AAEPgB,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAFN,KAAD,CAAR;AAID,GAPD;;AAQA,QAAME,WAAW,GAAG,MAAMC,QAAN,IAAkB;AACpCC,IAAAA,OAAO,CAACC,GAAR,CAAYC,EAAZ;AAEA,UAAMV,GAAG,GAAG,MAAMjB,WAAW,CAACkB,IAAZ,CAChB,iBADgB,EAEhBU,IAAI,CAACC,SAAL,CAAeL,QAAf,CAFgB,CAAlB;AAKAT,IAAAA,QAAQ,CAAC;AACPI,MAAAA,IAAI,EAAEd,aADC;AAEPe,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAFN,KAAD,CAAR;AAID,GAZD;;AAaA,QAAMS,aAAa,GAAG,YAAY;AAChC,UAAMb,GAAG,GAAG,MAAMjB,WAAW,CAAC+B,GAAZ,CAAgB,iBAAhB,CAAlB;AAEAhB,IAAAA,QAAQ,CAAC;AACPI,MAAAA,IAAI,EAAEb,cADC;AAEPc,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAFN,KAAD,CAAR;AAID,GAPD;;AAQA,QAAMW,WAAW,GAAG,YAAY;AAC9B,UAAMf,GAAG,GAAG,MAAMjB,WAAW,CAAC+B,GAAZ,CAAgB,eAAhB,CAAlB;AAEAhB,IAAAA,QAAQ,CAAC;AACPI,MAAAA,IAAI,EAAEZ,YADC;AAEPa,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAFN,KAAD,CAAR;AAID,GAPD;;AASA,SACE,oBAAC,WAAD,CAAa,QAAb;AACE,IAAA,KAAK,EAAE;AACLV,MAAAA,IAAI,EAAEG,KAAK,CAACH,IADP;AAELE,MAAAA,UAAU,EAAEC,KAAK,CAACD,UAFb;AAGLD,MAAAA,QAAQ,EAAEE,KAAK,CAACF,QAHX;AAILI,MAAAA,OAJK;AAKLO,MAAAA,WALK;AAMLS,MAAAA,WANK;AAOLF,MAAAA;AAPK,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAWGrB,KAAK,CAACwB,QAXT,CADF;AAeD,CAxED;;AA0EA,eAAezB,OAAf","sourcesContent":["import React, { useReducer } from \"react\";\nimport axiosClient from \"./axios\";\n\n// context\nimport userContext from \"./context\";\n\n// reducer\nimport Reducer from \"./reducer\";\n\n// type tags\nimport {\n  POST_USER,\n  GET_USER,\n  POST_CATEGORY,\n  GET_CATEGORIES,\n  GET_PRODUCTS\n} from \"./values\";\n\nconst Context = props => {\n  const initialState = {\n    user: null,\n    products: [],\n    categories: []\n  };\n\n  // Dispatch to execute actions\n  const [state, dispatch] = useReducer(Reducer, initialState);\n\n  // functions\n  const addUser = async user => {\n    const res = await axiosClient.post(\"/users/add\", user);\n\n    dispatch({\n      type: POST_USER,\n      payload: res.data\n    });\n  };\n  const getUser = async user => {\n    const res = await axiosClient.post(\"/users/get\", user);\n\n    dispatch({\n      type: GET_USER,\n      payload: res.data\n    });\n  };\n  const addCategory = async category => {\n    console.log(ca)\n\n    const res = await axiosClient.post(\n      \"/categories/add\",\n      JSON.stringify(category)\n    );\n\n    dispatch({\n      type: POST_CATEGORY,\n      payload: res.data\n    });\n  };\n  const getCategories = async () => {\n    const res = await axiosClient.get(\"/categories/all\");\n\n    dispatch({\n      type: GET_CATEGORIES,\n      payload: res.data\n    });\n  };\n  const getProducts = async () => {\n    const res = await axiosClient.get(\"/products/all\");\n\n    dispatch({\n      type: GET_PRODUCTS,\n      payload: res.data\n    });\n  };\n\n  return (\n    <userContext.Provider\n      value={{\n        user: state.user,\n        categories: state.categories,\n        products: state.products,\n        addUser,\n        addCategory,\n        getProducts,\n        getCategories\n      }}\n    >\n      {props.children}\n    </userContext.Provider>\n  );\n};\n\nexport default Context;\n"]},"metadata":{},"sourceType":"module"}