{"ast":null,"code":"import React,{useContext,useEffect}from\"react\";import Context from\"../config/context\";import{Form,Modal,Button,Header,Dropdown,Image,Grid}from\"semantic-ui-react\";export default function Detail(props){var context=useContext(Context);var currency=context.currency,getCurrency=context.getCurrency;while(currency===null){getCurrency();}console.log(currency+\" \"+parseFloat(currency));var cop=1*parseFloat(props.product.price);return React.createElement(Modal,{trigger:React.createElement(Button,{fluid:true},\"Show product\")},React.createElement(Modal.Content,null,React.createElement(Grid,null,React.createElement(Grid.Row,null,React.createElement(Grid.Column,null,React.createElement(Image,{src:props.product.picture1}))),React.createElement(Grid.Row,{columns:2},React.createElement(Grid.Column,null,React.createElement(Image,{src:props.product.picture2})),React.createElement(Grid.Column,null,React.createElement(Image,{src:props.product.picture3})))),React.createElement(\"br\",null),React.createElement(Form,null,React.createElement(Form.Input,{name:\"name\",label:\"Name\",value:props.product.name}),React.createElement(Form.Input,{name:\"description\",label:\"Description\",value:props.product.description}),React.createElement(Form.Group,{widths:\"equal\"},React.createElement(Form.Input,{name:\"price\",label:\"Price (USD)\",value:\"$\"+props.product.price}),React.createElement(Form.Input,{name:\"price\",label:\"Price (COP)\",value:\"$\"+cop})),React.createElement(Form.Group,{widths:\"equal\"},React.createElement(Form.Input,{name:\"category\",label:\"Category\",value:props.product.category_id}),React.createElement(Form.Input,{name:\"weight\",label:\"Weight\",value:props.product.weight})),React.createElement(Button,{primary:true,fluid:true},\"Comprar\"))));}","map":{"version":3,"sources":["/home/devrobot/Escritorio/sts-4.5.0.RELEASE/workspace-spring-tool-suite/spring-boot-ecommerce/ecommerce-frontend/src/components/Detail.js"],"names":["React","useContext","useEffect","Context","Form","Modal","Button","Header","Dropdown","Image","Grid","Detail","props","context","currency","getCurrency","console","log","parseFloat","cop","product","price","picture1","picture2","picture3","name","description","category_id","weight"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,CAA4BC,SAA5B,KAA6C,OAA7C,CAEA,MAAOC,CAAAA,OAAP,KAAoB,mBAApB,CAEA,OACEC,IADF,CAEEC,KAFF,CAGEC,MAHF,CAIEC,MAJF,CAKEC,QALF,CAMEC,KANF,CAOEC,IAPF,KAQO,mBARP,CAUA,cAAe,SAASC,CAAAA,MAAT,CAAgBC,KAAhB,CAAuB,CACpC,GAAMC,CAAAA,OAAO,CAAGZ,UAAU,CAACE,OAAD,CAA1B,CADoC,GAE5BW,CAAAA,QAF4B,CAEFD,OAFE,CAE5BC,QAF4B,CAElBC,WAFkB,CAEFF,OAFE,CAElBE,WAFkB,CAIpC,MAAOD,QAAQ,GAAK,IAApB,CAA0B,CACxBC,WAAW,GACZ,CAEDC,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAAG,GAAX,CAAiBI,UAAU,CAACJ,QAAD,CAAvC,EACA,GAAMK,CAAAA,GAAG,CAAG,EAAID,UAAU,CAACN,KAAK,CAACQ,OAAN,CAAcC,KAAf,CAA1B,CAEA,MACE,qBAAC,KAAD,EAAO,OAAO,CAAE,oBAAC,MAAD,EAAQ,KAAK,KAAb,iBAAhB,EACE,oBAAC,KAAD,CAAO,OAAP,MACE,oBAAC,IAAD,MACE,oBAAC,IAAD,CAAM,GAAN,MACE,oBAAC,IAAD,CAAM,MAAN,MACE,oBAAC,KAAD,EAAO,GAAG,CAAET,KAAK,CAACQ,OAAN,CAAcE,QAA1B,EADF,CADF,CADF,CAME,oBAAC,IAAD,CAAM,GAAN,EAAU,OAAO,CAAE,CAAnB,EACE,oBAAC,IAAD,CAAM,MAAN,MACE,oBAAC,KAAD,EAAO,GAAG,CAAEV,KAAK,CAACQ,OAAN,CAAcG,QAA1B,EADF,CADF,CAIE,oBAAC,IAAD,CAAM,MAAN,MACE,oBAAC,KAAD,EAAO,GAAG,CAAEX,KAAK,CAACQ,OAAN,CAAcI,QAA1B,EADF,CAJF,CANF,CADF,CAgBE,8BAhBF,CAiBE,oBAAC,IAAD,MACE,oBAAC,IAAD,CAAM,KAAN,EAAY,IAAI,CAAC,MAAjB,CAAwB,KAAK,CAAC,MAA9B,CAAqC,KAAK,CAAEZ,KAAK,CAACQ,OAAN,CAAcK,IAA1D,EADF,CAEE,oBAAC,IAAD,CAAM,KAAN,EACE,IAAI,CAAC,aADP,CAEE,KAAK,CAAC,aAFR,CAGE,KAAK,CAAEb,KAAK,CAACQ,OAAN,CAAcM,WAHvB,EAFF,CAOE,oBAAC,IAAD,CAAM,KAAN,EAAY,MAAM,CAAC,OAAnB,EACE,oBAAC,IAAD,CAAM,KAAN,EACE,IAAI,CAAC,OADP,CAEE,KAAK,CAAC,aAFR,CAGE,KAAK,CAAE,IAAMd,KAAK,CAACQ,OAAN,CAAcC,KAH7B,EADF,CAME,oBAAC,IAAD,CAAM,KAAN,EAAY,IAAI,CAAC,OAAjB,CAAyB,KAAK,CAAC,aAA/B,CAA6C,KAAK,CAAE,IAAMF,GAA1D,EANF,CAPF,CAeE,oBAAC,IAAD,CAAM,KAAN,EAAY,MAAM,CAAC,OAAnB,EACE,oBAAC,IAAD,CAAM,KAAN,EACE,IAAI,CAAC,UADP,CAEE,KAAK,CAAC,UAFR,CAGE,KAAK,CAAEP,KAAK,CAACQ,OAAN,CAAcO,WAHvB,EADF,CAME,oBAAC,IAAD,CAAM,KAAN,EACE,IAAI,CAAC,QADP,CAEE,KAAK,CAAC,QAFR,CAGE,KAAK,CAAEf,KAAK,CAACQ,OAAN,CAAcQ,MAHvB,EANF,CAfF,CA2BE,oBAAC,MAAD,EAAQ,OAAO,KAAf,CAAgB,KAAK,KAArB,YA3BF,CAjBF,CADF,CADF,CAqDD","sourcesContent":["import React, { useContext, useEffect } from \"react\";\n\nimport Context from \"../config/context\";\n\nimport {\n  Form,\n  Modal,\n  Button,\n  Header,\n  Dropdown,\n  Image,\n  Grid\n} from \"semantic-ui-react\";\n\nexport default function Detail(props) {\n  const context = useContext(Context);\n  const { currency, getCurrency } = context;\n\n  while (currency === null) {\n    getCurrency();\n  }\n\n  console.log(currency + \" \" + parseFloat(currency));\n  const cop = 1 * parseFloat(props.product.price);\n\n  return (\n    <Modal trigger={<Button fluid>Show product</Button>}>\n      <Modal.Content>\n        <Grid>\n          <Grid.Row>\n            <Grid.Column>\n              <Image src={props.product.picture1} />\n            </Grid.Column>\n          </Grid.Row>\n          <Grid.Row columns={2}>\n            <Grid.Column>\n              <Image src={props.product.picture2} />\n            </Grid.Column>\n            <Grid.Column>\n              <Image src={props.product.picture3} />\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n        <br />\n        <Form>\n          <Form.Input name=\"name\" label=\"Name\" value={props.product.name} />\n          <Form.Input\n            name=\"description\"\n            label=\"Description\"\n            value={props.product.description}\n          />\n          <Form.Group widths=\"equal\">\n            <Form.Input\n              name=\"price\"\n              label=\"Price (USD)\"\n              value={\"$\" + props.product.price}\n            />\n            <Form.Input name=\"price\" label=\"Price (COP)\" value={\"$\" + cop} />\n          </Form.Group>\n          <Form.Group widths=\"equal\">\n            <Form.Input\n              name=\"category\"\n              label=\"Category\"\n              value={props.product.category_id}\n            />\n            <Form.Input\n              name=\"weight\"\n              label=\"Weight\"\n              value={props.product.weight}\n            />\n          </Form.Group>\n          <Button primary fluid>\n            Comprar\n          </Button>\n        </Form>\n      </Modal.Content>\n    </Modal>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}