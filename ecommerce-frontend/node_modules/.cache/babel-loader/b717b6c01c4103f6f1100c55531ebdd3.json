{"ast":null,"code":"import _slicedToArray from \"/home/devrobot/Escritorio/ecommerce-frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/devrobot/Escritorio/ecommerce-frontend/src/config/connector.js\";\nimport React, { useReducer } from \"react\";\nimport axiosClient from \"./axios\"; // context\n\nimport userContext from \"./context\"; // reducer\n\nimport userReducer from \"./reducer\"; // type tags\n\nimport { POST_USER, GET_CATEGORIES, GET_PRODUCTS } from \"./values\";\n\nconst Context = props => {\n  const initialState = {\n    user: null,\n    categories: [],\n    products: []\n  }; // Dispatch para ejecutar las acciones\n\n  const _useReducer = useReducer(userReducer, initialState),\n        _useReducer2 = _slicedToArray(_useReducer, 2),\n        state = _useReducer2[0],\n        dispatch = _useReducer2[1]; // funciones\n\n\n  const addUser = async user => {\n    const res = await axiosClient.post(\"/users/add\", user);\n    dispatch({\n      type: REGISTRAR_USUARIO,\n      payload: res.data\n    });\n  };\n\n  const getCategories = async () => {\n    const res = await axiosClient.get(\"/categories/all\");\n    dispatch({\n      type: GET\n    });\n  };\n\n  const getProducts = async () => {\n    const res = await axiosClient.get(\"/products/all\");\n    dispatch({\n      type: GET_PRODUCTS,\n      payload: res.data\n    });\n  };\n\n  return React.createElement(userContext.Provider, {\n    value: {\n      user: state.user,\n      products: state.products,\n      addUser,\n      getProducts\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, props.children);\n};\n\nexport default Context;","map":{"version":3,"sources":["/home/devrobot/Escritorio/ecommerce-frontend/src/config/connector.js"],"names":["React","useReducer","axiosClient","userContext","userReducer","POST_USER","GET_CATEGORIES","GET_PRODUCTS","Context","props","initialState","user","categories","products","state","dispatch","addUser","res","post","type","REGISTRAR_USUARIO","payload","data","getCategories","get","GET","getProducts","children"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,WAAP,MAAwB,SAAxB,C,CAEA;;AACA,OAAOC,WAAP,MAAwB,WAAxB,C,CAEA;;AACA,OAAOC,WAAP,MAAwB,WAAxB,C,CAEA;;AACA,SACEC,SADF,EACaC,cADb,EAC6BC,YAD7B,QAEO,UAFP;;AAIA,MAAMC,OAAO,GAAGC,KAAK,IAAI;AACvB,QAAMC,YAAY,GAAG;AACnBC,IAAAA,IAAI,EAAE,IADa;AAEnBC,IAAAA,UAAU,EAAE,EAFO;AAGnBC,IAAAA,QAAQ,EAAE;AAHS,GAArB,CADuB,CAOvB;;AAPuB,sBAQGZ,UAAU,CAACG,WAAD,EAAcM,YAAd,CARb;AAAA;AAAA,QAQhBI,KARgB;AAAA,QAQTC,QARS,oBAUvB;;;AACA,QAAMC,OAAO,GAAG,MAAML,IAAN,IAAc;AAC5B,UAAMM,GAAG,GAAG,MAAMf,WAAW,CAACgB,IAAZ,CAAiB,YAAjB,EAA+BP,IAA/B,CAAlB;AAEAI,IAAAA,QAAQ,CAAC;AACPI,MAAAA,IAAI,EAAEC,iBADC;AAEPC,MAAAA,OAAO,EAAEJ,GAAG,CAACK;AAFN,KAAD,CAAR;AAID,GAPD;;AAQA,QAAMC,aAAa,GAAG,YAAY;AAChC,UAAMN,GAAG,GAAG,MAAMf,WAAW,CAACsB,GAAZ,CAAgB,iBAAhB,CAAlB;AAEAT,IAAAA,QAAQ,CAAC;AACPI,MAAAA,IAAI,EAACM;AADE,KAAD,CAAR;AAGD,GAND;;AAOA,QAAMC,WAAW,GAAG,YAAY;AAC9B,UAAMT,GAAG,GAAG,MAAMf,WAAW,CAACsB,GAAZ,CAAgB,eAAhB,CAAlB;AAEAT,IAAAA,QAAQ,CAAC;AACPI,MAAAA,IAAI,EAAEZ,YADC;AAEPc,MAAAA,OAAO,EAAEJ,GAAG,CAACK;AAFN,KAAD,CAAR;AAID,GAPD;;AASA,SACE,oBAAC,WAAD,CAAa,QAAb;AACE,IAAA,KAAK,EAAE;AACLX,MAAAA,IAAI,EAAEG,KAAK,CAACH,IADP;AAELE,MAAAA,QAAQ,EAAEC,KAAK,CAACD,QAFX;AAGLG,MAAAA,OAHK;AAILU,MAAAA;AAJK,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQGjB,KAAK,CAACkB,QART,CADF;AAYD,CA/CD;;AAiDA,eAAenB,OAAf","sourcesContent":["import React, { useReducer } from \"react\";\nimport axiosClient from \"./axios\";\n\n// context\nimport userContext from \"./context\";\n\n// reducer\nimport userReducer from \"./reducer\";\n\n// type tags\nimport {\n  POST_USER, GET_CATEGORIES, GET_PRODUCTS\n} from \"./values\";\n\nconst Context = props => {\n  const initialState = {\n    user: null,\n    categories: [],\n    products: []\n  };\n\n  // Dispatch para ejecutar las acciones\n  const [state, dispatch] = useReducer(userReducer, initialState);\n\n  // funciones\n  const addUser = async user => {\n    const res = await axiosClient.post(\"/users/add\", user);\n\n    dispatch({\n      type: REGISTRAR_USUARIO,\n      payload: res.data\n    });\n  };\n  const getCategories = async () => {\n    const res = await axiosClient.get(\"/categories/all\");\n\n    dispatch({\n      type:GET\n    })\n  };\n  const getProducts = async () => {\n    const res = await axiosClient.get(\"/products/all\");\n\n    dispatch({\n      type: GET_PRODUCTS,\n      payload: res.data\n    });\n  };\n\n  return (\n    <userContext.Provider\n      value={{\n        user: state.user,\n        products: state.products,\n        addUser,\n        getProducts\n      }}\n    >\n      {props.children}\n    </userContext.Provider>\n  );\n};\n\nexport default Context;\n"]},"metadata":{},"sourceType":"module"}