{"ast":null,"code":"import _slicedToArray from\"/home/devrobot/Escritorio/sts-4.5.0.RELEASE/workspace-spring-tool-suite/spring-boot-ecommerce/ecommerce-frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useContext,useState,useEffect}from\"react\";import{Grid,Segment,Card}from\"semantic-ui-react\";import Category from\"../components/Category\";import Pagination from\"../components/Pagination\";import AddCategoryForm from\"../components/AddCategoryForm\";import Context from\"../config/context\";export default function Categories(){var context=useContext(Context);var user=context.user,categories=context.categories,getCategories=context.getCategories;var _useState=useState(1),_useState2=_slicedToArray(_useState,2),currentPage=_useState2[0],setCurrentPage=_useState2[1];var _useState3=useState(9),_useState4=_slicedToArray(_useState3,2),cardsPerPage=_useState4[0],setCardsPerPage=_useState4[1];useEffect(function(){getCategories();},[]);// Get current categories\nvar indexOfLastCategory=currentPage*cardsPerPage;var indexOfFirstCategory=indexOfLastCategory-cardsPerPage;var currentCategories=categories.slice(indexOfFirstCategory,indexOfLastCategory);var views=categories.length>0?currentCategories.map(function(category){return React.createElement(Category,{category:category});}):React.createElement(Card,null,React.createElement(Card.Content,null,React.createElement(\"h2\",null,\"Nothing here!\")));var paginate=function paginate(pageNumber){return setCurrentPage(pageNumber);};var pagination=categories.length>cardsPerPage?React.createElement(Pagination,{cardsPerPage:cardsPerPage,totalCards:categories.length,paginate:paginate}):null;var add=user?user.admin?React.createElement(AddCategoryForm,null):null:null;return React.createElement(\"div\",null,React.createElement(Segment,null,React.createElement(Grid,null,React.createElement(Grid.Column,{floated:\"left\",width:5},React.createElement(\"h1\",null,\"Recent Categories\")),React.createElement(Grid.Column,{floated:\"right\",width:5},add))),React.createElement(Card.Group,{fluid:true,itemsPerRow:\"3\"},views),React.createElement(\"br\",null),React.createElement(\"center\",null,pagination));}","map":{"version":3,"sources":["/home/devrobot/Escritorio/sts-4.5.0.RELEASE/workspace-spring-tool-suite/spring-boot-ecommerce/ecommerce-frontend/src/pages/Categories.js"],"names":["React","useContext","useState","useEffect","Grid","Segment","Card","Category","Pagination","AddCategoryForm","Context","Categories","context","user","categories","getCategories","currentPage","setCurrentPage","cardsPerPage","setCardsPerPage","indexOfLastCategory","indexOfFirstCategory","currentCategories","slice","views","length","map","category","paginate","pageNumber","pagination","add","admin"],"mappings":"mMAAA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,CAA4BC,QAA5B,CAAsCC,SAAtC,KAAuD,OAAvD,CAEA,OAASC,IAAT,CAAeC,OAAf,CAAwBC,IAAxB,KAAoC,mBAApC,CAEA,MAAOC,CAAAA,QAAP,KAAqB,wBAArB,CACA,MAAOC,CAAAA,UAAP,KAAuB,0BAAvB,CACA,MAAOC,CAAAA,eAAP,KAA4B,+BAA5B,CAEA,MAAOC,CAAAA,OAAP,KAAoB,mBAApB,CAEA,cAAe,SAASC,CAAAA,UAAT,EAAsB,CACnC,GAAMC,CAAAA,OAAO,CAAGX,UAAU,CAACS,OAAD,CAA1B,CADmC,GAE3BG,CAAAA,IAF2B,CAESD,OAFT,CAE3BC,IAF2B,CAErBC,UAFqB,CAESF,OAFT,CAErBE,UAFqB,CAETC,aAFS,CAESH,OAFT,CAETG,aAFS,eAIGb,QAAQ,CAAC,CAAD,CAJX,wCAI5Bc,WAJ4B,eAIfC,cAJe,8BAKKf,QAAQ,CAAC,CAAD,CALb,yCAK5BgB,YAL4B,eAKdC,eALc,eAOnChB,SAAS,CAAC,UAAM,CACdY,aAAa,GACd,CAFQ,CAEN,EAFM,CAAT,CAIA;AACA,GAAMK,CAAAA,mBAAmB,CAAGJ,WAAW,CAAGE,YAA1C,CACA,GAAMG,CAAAA,oBAAoB,CAAGD,mBAAmB,CAAGF,YAAnD,CACA,GAAMI,CAAAA,iBAAiB,CAAGR,UAAU,CAACS,KAAX,CACxBF,oBADwB,CAExBD,mBAFwB,CAA1B,CAKA,GAAMI,CAAAA,KAAK,CACTV,UAAU,CAACW,MAAX,CAAoB,CAApB,CACEH,iBAAiB,CAACI,GAAlB,CAAsB,SAAAC,QAAQ,QAAI,qBAAC,QAAD,EAAU,QAAQ,CAAEA,QAApB,EAAJ,EAA9B,CADF,CAGE,oBAAC,IAAD,MACE,oBAAC,IAAD,CAAM,OAAN,MACE,8CADF,CADF,CAJJ,CAWA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAAAC,UAAU,QAAIZ,CAAAA,cAAc,CAACY,UAAD,CAAlB,EAA3B,CAEA,GAAMC,CAAAA,UAAU,CACdhB,UAAU,CAACW,MAAX,CAAoBP,YAApB,CACE,oBAAC,UAAD,EACE,YAAY,CAAEA,YADhB,CAEE,UAAU,CAAEJ,UAAU,CAACW,MAFzB,CAGE,QAAQ,CAAEG,QAHZ,EADF,CAMI,IAPN,CASA,GAAMG,CAAAA,GAAG,CAAGlB,IAAI,CAAGA,IAAI,CAACmB,KAAL,CAAa,oBAAC,eAAD,MAAb,CAAmC,IAAtC,CAA6C,IAA7D,CAEA,MACE,gCACE,oBAAC,OAAD,MACE,oBAAC,IAAD,MACE,oBAAC,IAAD,CAAM,MAAN,EAAa,OAAO,CAAC,MAArB,CAA4B,KAAK,CAAE,CAAnC,EACE,kDADF,CADF,CAIE,oBAAC,IAAD,CAAM,MAAN,EAAa,OAAO,CAAC,OAArB,CAA6B,KAAK,CAAE,CAApC,EACGD,GADH,CAJF,CADF,CADF,CAWE,oBAAC,IAAD,CAAM,KAAN,EAAY,KAAK,KAAjB,CAAkB,WAAW,CAAC,GAA9B,EACGP,KADH,CAXF,CAcE,8BAdF,CAeE,kCAASM,UAAT,CAfF,CADF,CAmBD","sourcesContent":["import React, { useContext, useState, useEffect } from \"react\";\n\nimport { Grid, Segment, Card } from \"semantic-ui-react\";\n\nimport Category from \"../components/Category\";\nimport Pagination from \"../components/Pagination\";\nimport AddCategoryForm from \"../components/AddCategoryForm\";\n\nimport Context from \"../config/context\";\n\nexport default function Categories() {\n  const context = useContext(Context);\n  const { user, categories, getCategories } = context;\n\n  const [currentPage, setCurrentPage] = useState(1);\n  const [cardsPerPage, setCardsPerPage] = useState(9);\n\n  useEffect(() => {\n    getCategories();\n  }, []);\n\n  // Get current categories\n  const indexOfLastCategory = currentPage * cardsPerPage;\n  const indexOfFirstCategory = indexOfLastCategory - cardsPerPage;\n  const currentCategories = categories.slice(\n    indexOfFirstCategory,\n    indexOfLastCategory\n  );\n\n  const views =\n    categories.length > 0 ? (\n      currentCategories.map(category => <Category category={category} />)\n    ) : (\n      <Card>\n        <Card.Content>\n          <h2>Nothing here!</h2>\n        </Card.Content>\n      </Card>\n    );\n\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n\n  const pagination =\n    categories.length > cardsPerPage ? (\n      <Pagination\n        cardsPerPage={cardsPerPage}\n        totalCards={categories.length}\n        paginate={paginate}\n      />\n    ) : null;\n\n  const add = user ? user.admin ? <AddCategoryForm /> : null : null;\n\n  return (\n    <div>\n      <Segment>\n        <Grid>\n          <Grid.Column floated=\"left\" width={5}>\n            <h1>Recent Categories</h1>\n          </Grid.Column>\n          <Grid.Column floated=\"right\" width={5}>\n            {add}\n          </Grid.Column>\n        </Grid>\n      </Segment>\n      <Card.Group fluid itemsPerRow=\"3\">\n        {views}\n      </Card.Group>\n      <br />\n      <center>{pagination}</center>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}