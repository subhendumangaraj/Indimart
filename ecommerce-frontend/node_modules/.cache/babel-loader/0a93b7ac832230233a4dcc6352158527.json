{"ast":null,"code":"import _slicedToArray from \"/home/devrobot/Escritorio/sts-4.5.0.RELEASE/workspace-spring-tool-suite/spring-boot-ecommerce/ecommerce-frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/devrobot/Escritorio/sts-4.5.0.RELEASE/workspace-spring-tool-suite/spring-boot-ecommerce/ecommerce-frontend/src/pages/Login.js\";\nimport React, { useContext, useState } from \"react\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport { Grid, Card, Header, Form, Button } from \"semantic-ui-react\";\nimport Context from \"../config/context\";\nexport default function Login() {\n  const context = useContext(Context);\n  const getUser = context.getUser;\n\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        name = _useState2[0],\n        setName = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        picture = _useState4[0],\n        setPicture = _useState4[1];\n\n  const handleChange1 = (e, {\n    value\n  }) => setName({\n    value\n  });\n\n  const handleChange2 = (e, {\n    value\n  }) => setPicture({\n    value\n  });\n\n  const handleSubmit = () => {\n    const user = {\n      email: name.value,\n      password: picture.value\n    };\n    getUser(user);\n  };\n\n  return React.createElement(Grid, {\n    verticalAlign: \"middle\",\n    columns: 3,\n    centered: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(Grid.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(Grid.Column, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  })));\n}","map":{"version":3,"sources":["/home/devrobot/Escritorio/sts-4.5.0.RELEASE/workspace-spring-tool-suite/spring-boot-ecommerce/ecommerce-frontend/src/pages/Login.js"],"names":["React","useContext","useState","Grid","Card","Header","Form","Button","Context","Login","context","getUser","name","setName","picture","setPicture","handleChange1","e","value","handleChange2","handleSubmit","user","email","password"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AAEA,OAAO,kCAAP;AACA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,MAArB,EAA6BC,IAA7B,EAAmCC,MAAnC,QAAiD,mBAAjD;AAEA,OAAOC,OAAP,MAAoB,mBAApB;AAEA,eAAe,SAASC,KAAT,GAAiB;AAC9B,QAAMC,OAAO,GAAGT,UAAU,CAACO,OAAD,CAA1B;AAD8B,QAEtBG,OAFsB,GAEVD,OAFU,CAEtBC,OAFsB;;AAAA,oBAINT,QAAQ,CAAC,EAAD,CAJF;AAAA;AAAA,QAIvBU,IAJuB;AAAA,QAIjBC,OAJiB;;AAAA,qBAKAX,QAAQ,CAAC,EAAD,CALR;AAAA;AAAA,QAKvBY,OALuB;AAAA,QAKdC,UALc;;AAO9B,QAAMC,aAAa,GAAG,CAACC,CAAD,EAAI;AAAEC,IAAAA;AAAF,GAAJ,KAAkBL,OAAO,CAAC;AAAEK,IAAAA;AAAF,GAAD,CAA/C;;AACA,QAAMC,aAAa,GAAG,CAACF,CAAD,EAAI;AAAEC,IAAAA;AAAF,GAAJ,KAAkBH,UAAU,CAAC;AAAEG,IAAAA;AAAF,GAAD,CAAlD;;AAEA,QAAME,YAAY,GAAG,MAAM;AACzB,UAAMC,IAAI,GAAG;AACXC,MAAAA,KAAK,EAAEV,IAAI,CAACM,KADD;AAEXK,MAAAA,QAAQ,EAAET,OAAO,CAACI;AAFP,KAAb;AAKAP,IAAAA,OAAO,CAACU,IAAD,CAAP;AACD,GAPD;;AAQA,SACE,oBAAC,IAAD;AAAM,IAAA,aAAa,EAAC,QAApB;AAA6B,IAAA,OAAO,EAAE,CAAtC;AAAyC,IAAA,QAAQ,MAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF;AASD","sourcesContent":["import React, { useContext, useState } from \"react\";\n\nimport \"semantic-ui-css/semantic.min.css\";\nimport { Grid, Card, Header, Form, Button } from \"semantic-ui-react\";\n\nimport Context from \"../config/context\";\n\nexport default function Login() {\n  const context = useContext(Context);\n  const { getUser } = context;\n\n  const [name, setName] = useState(\"\");\n  const [picture, setPicture] = useState(\"\");\n\n  const handleChange1 = (e, { value }) => setName({ value });\n  const handleChange2 = (e, { value }) => setPicture({ value });\n\n  const handleSubmit = () => {\n    const user = {\n      email: name.value,\n      password: picture.value\n    };\n\n    getUser(user);\n  };\n  return (\n    <Grid verticalAlign=\"middle\" columns={3} centered>\n      <Grid.Row>\n        <Grid.Column>\n          \n        </Grid.Column>\n      </Grid.Row>\n    </Grid>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}