{"ast":null,"code":"import _slicedToArray from \"/home/devrobot/Escritorio/sts-4.5.0.RELEASE/workspace-spring-tool-suite/spring-boot-ecommerce/ecommerce-frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/devrobot/Escritorio/sts-4.5.0.RELEASE/workspace-spring-tool-suite/spring-boot-ecommerce/ecommerce-frontend/src/pages/Products.js\";\nimport React, { useContext, useState, useEffect } from \"react\";\nimport { Grid, Header, Button } from \"semantic-ui-react\";\nimport Product from \"../components/Product\";\nimport Pagination from \"../components/Pagination\";\nimport Context from \"../config/context\";\nexport default function Products() {\n  const context = useContext(Context);\n  const products = context.products,\n        getProducts = context.getProducts;\n\n  const _useState = useState(1),\n        _useState2 = _slicedToArray(_useState, 2),\n        currentPage = _useState2[0],\n        setCurrentPage = _useState2[1];\n\n  const _useState3 = useState(9),\n        _useState4 = _slicedToArray(_useState3, 2),\n        cardsPerPage = _useState4[0],\n        setCardsPerPage = _useState4[1];\n\n  useEffect(() => {\n    getProducts();\n  }, []); // Get current products\n\n  const indexOfLastProduct = currentPage * cardsPerPage;\n  const indexOfFirstProduct = indexOfLastProduct - cardsPerPage;\n  const currentProducts = products.slice(indexOfFirstProduct, indexOfLastProduct);\n  const views = products ? currentProducts.map(product => React.createElement(Grid.Column, {\n    key: product.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(Product, {\n    product: product,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }))) : React.createElement(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"Nothing here!\");\n\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n\n  const pagination = products.length > cardsPerPage ? React.createElement(Pagination, {\n    cardsPerPage: cardsPerPage,\n    totalCards: products.length,\n    paginate: paginate,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }) : null;\n  return React.createElement(Grid, {\n    columns: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(Grid.Row, {\n    className: \"page-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(Grid.Column, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"Recent Products\")), React.createElement(Grid.Column, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }), React.createElement(Grid.Column, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(Button, {\n    primary: true,\n    fl: true,\n    size: \"medium\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"Add new Product\"))), React.createElement(Grid.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, views), React.createElement(Grid.Row, {\n    centered: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, pagination));\n}","map":{"version":3,"sources":["/home/devrobot/Escritorio/sts-4.5.0.RELEASE/workspace-spring-tool-suite/spring-boot-ecommerce/ecommerce-frontend/src/pages/Products.js"],"names":["React","useContext","useState","useEffect","Grid","Header","Button","Product","Pagination","Context","Products","context","products","getProducts","currentPage","setCurrentPage","cardsPerPage","setCardsPerPage","indexOfLastProduct","indexOfFirstProduct","currentProducts","slice","views","map","product","id","paginate","pageNumber","pagination","length"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,EAAsCC,SAAtC,QAAuD,OAAvD;AAEA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,MAAvB,QAAqC,mBAArC;AAEA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AAEA,OAAOC,OAAP,MAAoB,mBAApB;AAEA,eAAe,SAASC,QAAT,GAAoB;AACjC,QAAMC,OAAO,GAAGV,UAAU,CAACQ,OAAD,CAA1B;AADiC,QAEzBG,QAFyB,GAECD,OAFD,CAEzBC,QAFyB;AAAA,QAEfC,WAFe,GAECF,OAFD,CAEfE,WAFe;;AAAA,oBAIKX,QAAQ,CAAC,CAAD,CAJb;AAAA;AAAA,QAI1BY,WAJ0B;AAAA,QAIbC,cAJa;;AAAA,qBAKOb,QAAQ,CAAC,CAAD,CALf;AAAA;AAAA,QAK1Bc,YAL0B;AAAA,QAKZC,eALY;;AAOjCd,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,WAAW;AACZ,GAFQ,EAEN,EAFM,CAAT,CAPiC,CAWjC;;AACA,QAAMK,kBAAkB,GAAGJ,WAAW,GAAGE,YAAzC;AACA,QAAMG,mBAAmB,GAAGD,kBAAkB,GAAGF,YAAjD;AACA,QAAMI,eAAe,GAAGR,QAAQ,CAACS,KAAT,CACtBF,mBADsB,EAEtBD,kBAFsB,CAAxB;AAKA,QAAMI,KAAK,GAAGV,QAAQ,GACpBQ,eAAe,CAACG,GAAhB,CAAoBC,OAAO,IACzB,oBAAC,IAAD,CAAM,MAAN;AAAa,IAAA,GAAG,EAAEA,OAAO,CAACC,EAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD;AAAS,IAAA,OAAO,EAAED,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADoB,GAOpB,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAPF;;AAUA,QAAME,QAAQ,GAAGC,UAAU,IAAIZ,cAAc,CAACY,UAAD,CAA7C;;AAEA,QAAMC,UAAU,GAAGhB,QAAQ,CAACiB,MAAT,GAAkBb,YAAlB,GACjB,oBAAC,UAAD;AACE,IAAA,YAAY,EAAEA,YADhB;AAEE,IAAA,UAAU,EAAEJ,QAAQ,CAACiB,MAFvB;AAGE,IAAA,QAAQ,EAAEH,QAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADiB,GAMf,IANJ;AAQA,SACE,oBAAC,IAAD;AAAM,IAAA,OAAO,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,GAAN;AAAU,IAAA,SAAS,EAAC,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,CADF,EAIE,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAKE,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,OAAO,MAAf;AAAgB,IAAA,EAAE,MAAlB;AAAmB,IAAA,IAAI,EAAC,QAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,CALF,CADF,EAYE,oBAAC,IAAD,CAAM,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAWJ,KAAX,CAZF,EAaE,oBAAC,IAAD,CAAM,GAAN;AAAU,IAAA,QAAQ,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoBM,UAApB,CAbF,CADF;AAiBD","sourcesContent":["import React, { useContext, useState, useEffect } from \"react\";\n\nimport { Grid, Header, Button } from \"semantic-ui-react\";\n\nimport Product from \"../components/Product\";\nimport Pagination from \"../components/Pagination\";\n\nimport Context from \"../config/context\";\n\nexport default function Products() {\n  const context = useContext(Context);\n  const { products, getProducts } = context;\n\n  const [currentPage, setCurrentPage] = useState(1);\n  const [cardsPerPage, setCardsPerPage] = useState(9);\n\n  useEffect(() => {\n    getProducts();\n  }, []);\n\n  // Get current products\n  const indexOfLastProduct = currentPage * cardsPerPage;\n  const indexOfFirstProduct = indexOfLastProduct - cardsPerPage;\n  const currentProducts = products.slice(\n    indexOfFirstProduct,\n    indexOfLastProduct\n  );\n\n  const views = products ? (\n    currentProducts.map(product => (\n      <Grid.Column key={product.id}>\n        <Product product={product} />\n      </Grid.Column>\n    ))\n  ) : (\n    <Header>Nothing here!</Header>\n  );\n\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n\n  const pagination = products.length > cardsPerPage ? (\n    <Pagination\n      cardsPerPage={cardsPerPage}\n      totalCards={products.length}\n      paginate={paginate}\n    />\n  ) : null;\n\n  return (\n    <Grid columns={3}>\n      <Grid.Row className=\"page-title\">\n        <Grid.Column>\n          <h1>Recent Products</h1>\n        </Grid.Column>\n        <Grid.Column />\n        <Grid.Column>\n          <Button primary fl size=\"medium\">\n            Add new Product\n          </Button>\n        </Grid.Column>\n      </Grid.Row>\n      <Grid.Row>{views}</Grid.Row>\n      <Grid.Row centered>{pagination}</Grid.Row>\n    </Grid>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}