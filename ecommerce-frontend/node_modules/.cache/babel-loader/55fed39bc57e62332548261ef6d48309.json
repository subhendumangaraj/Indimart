{"ast":null,"code":"import _slicedToArray from \"/home/devrobot/Escritorio/sts-4.5.0.RELEASE/workspace-spring-tool-suite/spring-boot-ecommerce/ecommerce-frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/devrobot/Escritorio/sts-4.5.0.RELEASE/workspace-spring-tool-suite/spring-boot-ecommerce/ecommerce-frontend/src/components/AddCategoryForm.js\";\nimport React, { useContext, useState } from \"react\";\nimport { Form, Modal, Button, Header } from \"semantic-ui-react\";\nimport Context from \"../config/context\";\nexport default function AddCategoryForm() {\n  const context = useContext(Context);\n  const addCategory = context.addCategory;\n\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        nameData = _useState2[0],\n        setNameData = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        pictureData = _useState4[0],\n        setNPictureData = _useState4[1];\n\n  const handleChange1 = (e, {\n    value\n  }) => setNameData({\n    value\n  });\n\n  const handleSubmit = () => {\n    const _dataForm = dataForm,\n          name = _dataForm.name,\n          picture = _dataForm.picture;\n    const category = {\n      name: name,\n      picture: picture\n    };\n    console.log(category);\n    addCategory(JSON.stringify(category));\n  };\n\n  return React.createElement(Modal, {\n    trigger: React.createElement(Button, {\n      primary: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, \"Add new Category\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(Modal.Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"Add new Category\"), React.createElement(Modal.Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(Form, {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(Form.Input, {\n    name: \"name\",\n    label: \"Name\",\n    placeholder: \"Category name\",\n    onChange: handleChange,\n    value: dataForm.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }), React.createElement(Form.Input, {\n    name: \"image\",\n    label: \"Image\",\n    placeholder: \"Image URL\",\n    onChange: handleChange,\n    value: dataForm.picture,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }), React.createElement(Button, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"Add\"))));\n}","map":{"version":3,"sources":["/home/devrobot/Escritorio/sts-4.5.0.RELEASE/workspace-spring-tool-suite/spring-boot-ecommerce/ecommerce-frontend/src/components/AddCategoryForm.js"],"names":["React","useContext","useState","Form","Modal","Button","Header","Context","AddCategoryForm","context","addCategory","nameData","setNameData","pictureData","setNPictureData","handleChange1","e","value","handleSubmit","dataForm","name","picture","category","console","log","JSON","stringify","handleChange"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AAEA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,EAA8BC,MAA9B,QAA4C,mBAA5C;AAEA,OAAOC,OAAP,MAAoB,mBAApB;AAEA,eAAe,SAASC,eAAT,GAA2B;AACxC,QAAMC,OAAO,GAAGR,UAAU,CAACM,OAAD,CAA1B;AADwC,QAEhCG,WAFgC,GAEhBD,OAFgB,CAEhCC,WAFgC;;AAAA,oBAIRR,QAAQ,CAAC,EAAD,CAJA;AAAA;AAAA,QAIjCS,QAJiC;AAAA,QAIvBC,WAJuB;;AAAA,qBAKDV,QAAQ,CAAC,EAAD,CALP;AAAA;AAAA,QAKjCW,WALiC;AAAA,QAKpBC,eALoB;;AAOxC,QAAMC,aAAa,GAAG,CAACC,CAAD,EAAI;AAAEC,IAAAA;AAAF,GAAJ,KAAkBL,WAAW,CAAC;AAAEK,IAAAA;AAAF,GAAD,CAAnD;;AAEA,QAAMC,YAAY,GAAG,MAAM;AAAA,sBACCC,QADD;AAAA,UACjBC,IADiB,aACjBA,IADiB;AAAA,UACXC,OADW,aACXA,OADW;AAEzB,UAAMC,QAAQ,GAAG;AACfF,MAAAA,IAAI,EAAEA,IADS;AAEfC,MAAAA,OAAO,EAAEA;AAFM,KAAjB;AAKAE,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AAEAZ,IAAAA,WAAW,CAACe,IAAI,CAACC,SAAL,CAAeJ,QAAf,CAAD,CAAX;AACD,GAVD;;AAYA,SACE,oBAAC,KAAD;AAAO,IAAA,OAAO,EAAE,oBAAC,MAAD;AAAQ,MAAA,OAAO,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EAEE,oBAAC,KAAD,CAAO,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,QAAQ,EAAEJ,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,KAAN;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,KAAK,EAAC,MAFR;AAGE,IAAA,WAAW,EAAC,eAHd;AAIE,IAAA,QAAQ,EAAES,YAJZ;AAKE,IAAA,KAAK,EAAER,QAAQ,CAACC,IALlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAQE,oBAAC,IAAD,CAAM,KAAN;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,KAAK,EAAC,OAFR;AAGE,IAAA,WAAW,EAAC,WAHd;AAIE,IAAA,QAAQ,EAAEO,YAJZ;AAKE,IAAA,KAAK,EAAER,QAAQ,CAACE,OALlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,EAeE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAfF,CADF,CAFF,CADF;AAwBD","sourcesContent":["import React, { useContext, useState } from \"react\";\n\nimport { Form, Modal, Button, Header } from \"semantic-ui-react\";\n\nimport Context from \"../config/context\";\n\nexport default function AddCategoryForm() {\n  const context = useContext(Context);\n  const { addCategory } = context;\n\n  const [nameData, setNameData] = useState(\"\");\n  const [pictureData, setNPictureData] = useState(\"\");\n\n  const handleChange1 = (e, { value }) => setNameData({ value });\n\n  const handleSubmit = () => {\n    const { name, picture } = dataForm;\n    const category = {\n      name: name,\n      picture: picture\n    };\n\n    console.log(category);\n\n    addCategory(JSON.stringify(category));\n  };\n\n  return (\n    <Modal trigger={<Button primary>Add new Category</Button>}>\n      <Modal.Header>Add new Category</Modal.Header>\n      <Modal.Content>\n        <Form onSubmit={handleSubmit}>\n          <Form.Input\n            name=\"name\"\n            label=\"Name\"\n            placeholder=\"Category name\"\n            onChange={handleChange}\n            value={dataForm.name}\n          />\n          <Form.Input\n            name=\"image\"\n            label=\"Image\"\n            placeholder=\"Image URL\"\n            onChange={handleChange}\n            value={dataForm.picture}\n          />\n          <Button type=\"submit\">Add</Button>\n        </Form>\n      </Modal.Content>\n    </Modal>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}