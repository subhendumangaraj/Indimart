{"ast":null,"code":"import _slicedToArray from \"/home/devrobot/Escritorio/sts-4.5.0.RELEASE/workspace-spring-tool-suite/spring-boot-ecommerce/ecommerce-frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/devrobot/Escritorio/sts-4.5.0.RELEASE/workspace-spring-tool-suite/spring-boot-ecommerce/ecommerce-frontend/src/config/connector.js\";\nimport React, { useReducer } from \"react\";\nimport axiosClient from \"./axios\";\nimport currencyClient from \"./apiCurrency\"; // context\n\nimport userContext from \"./context\"; // reducer\n\nimport Reducer from \"./reducer\"; // type tags\n\nimport { GET_CURRENCY, GET_USER, GET_CATEGORIES, GET_PRODUCTS, POST_USER, POST_CATEGORY, POST_PRODUCTS } from \"./values\";\n\nconst Context = props => {\n  const initialState = {\n    user: null,\n    currency: null,\n    products: [],\n    categories: []\n  }; // Dispatch to execute actions\n\n  const _useReducer = useReducer(Reducer, initialState),\n        _useReducer2 = _slicedToArray(_useReducer, 2),\n        state = _useReducer2[0],\n        dispatch = _useReducer2[1]; // API Currency\n\n\n  const getCurrency = async () => {\n    const res = await currencyClient.get(\"q=USD_COP&compact=ultra\");\n    console.log();\n    dispatch({\n      type: GET_CURRENCY,\n      payload: res.data\n    });\n  }; // POST Methods\n\n\n  const addUser = async user => {\n    const res = await axiosClient.post(\"/users/add\", user);\n    localStorage.setItem(\"user\", JSON.stringify(res.data));\n    dispatch({\n      type: POST_USER,\n      payload: res.data\n    });\n  };\n\n  const addCategory = async category => {\n    const res = await axiosClient.post(\"/categories/add\", category);\n    dispatch({\n      type: POST_CATEGORY,\n      payload: res.data\n    });\n  };\n\n  const addProduct = async product => {\n    const res = await axiosClient.post(\"/products/add\", product);\n    dispatch({\n      type: POST_PRODUCTS,\n      payload: res.data\n    });\n  }; // GET Methods\n\n\n  const getUser = async user => {\n    const res = await axiosClient.get(\"/users/\" + user.username);\n\n    if (res.data.password === user.password) {\n      localStorage.setItem(\"user\", JSON.stringify(user));\n    }\n\n    dispatch({\n      type: GET_USER,\n      payload: res.data\n    });\n  };\n\n  const getCategories = async () => {\n    const res = await axiosClient.get(\"/categories/all\");\n    dispatch({\n      type: GET_CATEGORIES,\n      payload: res.data\n    });\n  };\n\n  const getProducts = async () => {\n    const res = await axiosClient.get(\"/products/all\");\n    dispatch({\n      type: GET_PRODUCTS,\n      payload: res.data\n    });\n  };\n\n  return React.createElement(userContext.Provider, {\n    value: {\n      user: state.user,\n      currency: state.currency,\n      categories: state.categories,\n      products: state.products,\n      addUser,\n      addCategory,\n      addProduct,\n      getUser,\n      getCategories,\n      getProducts,\n      getCurrency\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, props.children);\n};\n\nexport default Context;","map":{"version":3,"sources":["/home/devrobot/Escritorio/sts-4.5.0.RELEASE/workspace-spring-tool-suite/spring-boot-ecommerce/ecommerce-frontend/src/config/connector.js"],"names":["React","useReducer","axiosClient","currencyClient","userContext","Reducer","GET_CURRENCY","GET_USER","GET_CATEGORIES","GET_PRODUCTS","POST_USER","POST_CATEGORY","POST_PRODUCTS","Context","props","initialState","user","currency","products","categories","state","dispatch","getCurrency","res","get","console","log","type","payload","data","addUser","post","localStorage","setItem","JSON","stringify","addCategory","category","addProduct","product","getUser","username","password","getCategories","getProducts","children"],"mappings":"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","sourcesContent":["import React, { useReducer } from \"react\";\n\nimport axiosClient from \"./axios\";\nimport currencyClient from \"./apiCurrency\";\n\n// context\nimport userContext from \"./context\";\n\n// reducer\nimport Reducer from \"./reducer\";\n\n// type tags\nimport {\n  GET_CURRENCY,\n  GET_USER,\n  GET_CATEGORIES,\n  GET_PRODUCTS,\n  POST_USER,\n  POST_CATEGORY,\n  POST_PRODUCTS\n} from \"./values\";\n\nconst Context = props => {\n  const initialState = {\n    user: null,\n    currency: null,\n    products: [],\n    categories: []\n  };\n\n  // Dispatch to execute actions\n  const [state, dispatch] = useReducer(Reducer, initialState);\n\n  // API Currency\n  const getCurrency = async () => {\n    const res = await currencyClient.get(\"q=USD_COP&compact=ultra\");\n\n    console.log()\n\n    dispatch({\n      type: GET_CURRENCY,\n      payload: res.data\n    });\n  };\n\n  // POST Methods\n  const addUser = async user => {\n    const res = await axiosClient.post(\"/users/add\", user);\n\n    localStorage.setItem(\"user\", JSON.stringify(res.data));\n\n    dispatch({\n      type: POST_USER,\n      payload: res.data\n    });\n  };\n  const addCategory = async category => {\n    const res = await axiosClient.post(\"/categories/add\", category);\n\n    dispatch({\n      type: POST_CATEGORY,\n      payload: res.data\n    });\n  };\n  const addProduct = async product => {\n    const res = await axiosClient.post(\"/products/add\", product);\n\n    dispatch({\n      type: POST_PRODUCTS,\n      payload: res.data\n    });\n  };\n\n  // GET Methods\n  const getUser = async user => {\n    const res = await axiosClient.get(\"/users/\" + user.username);\n\n    if (res.data.password === user.password) {\n      localStorage.setItem(\"user\", JSON.stringify(user));\n    }\n\n    dispatch({\n      type: GET_USER,\n      payload: res.data\n    });\n  };\n  const getCategories = async () => {\n    const res = await axiosClient.get(\"/categories/all\");\n\n    dispatch({\n      type: GET_CATEGORIES,\n      payload: res.data\n    });\n  };\n  const getProducts = async () => {\n    const res = await axiosClient.get(\"/products/all\");\n\n    dispatch({\n      type: GET_PRODUCTS,\n      payload: res.data\n    });\n  };\n\n  return (\n    <userContext.Provider\n      value={{\n        user: state.user,\n        currency: state.currency,\n        categories: state.categories,\n        products: state.products,\n        addUser,\n        addCategory,\n        addProduct,\n        getUser,\n        getCategories,\n        getProducts,\n        getCurrency\n      }}\n    >\n      {props.children}\n    </userContext.Provider>\n  );\n};\n\nexport default Context;\n"]},"metadata":{},"sourceType":"module"}